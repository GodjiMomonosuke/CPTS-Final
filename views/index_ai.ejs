<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Lab Chatbot</title>
  <style>
    :root {
      --bg-chat: #f0f0f0;
      --primary-color: #6366f1;
      --primary-hover: #4f46e5;
      --card-bg: #ffffff;
      --text-primary: #1f2937;
      --text-secondary: #6b7280;
      --border-color: #e5e7eb;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: system-ui, -apple-system, "Segoe UI", Roboto, sans-serif;
      background-color: var(--bg-chat);
      color: var(--text-primary);
      line-height: 1.5;
      min-height: 100vh;
      display: flex;
      padding: 1.5rem;
      gap: 1.5rem;
    }

    /* Chat Container Styles */
    #chat-container {
      width: 60%;
      height: 85vh;
      background-color: var(--card-bg);
      border-radius: 1rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-direction: column;
      overflow: hidden;
      margin-top: 80px;
      padding: 40px;
    }

    /* Prompts Panel Styles */
    #prompts-panel {
      width: 40%;
      height: 85vh;
      background-color: var(--card-bg);
      border-radius: 1rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      overflow-y: auto;
      padding: 1.5rem;
      margin-top: 80px;
    }

    #chat-history {
      flex-grow: 1;
      padding: 1.5rem;
      overflow-y: auto;
      background-color: var(--bg-chat);
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .message {
      max-width: 85%;
      padding: 1rem;
      border-radius: 1rem;
      line-height: 1.6;
    }

    .user-message {
      margin-left: auto;
      background-color: var(--primary-color);
      color: white;
      border-bottom-right-radius: 0.25rem;
    }

    .bot-message {
      margin-right: auto;
      background-color: var(--card-bg);
      border-bottom-left-radius: 0.25rem;
    }

    #chat-form {
      padding: 1.25rem;
      background-color: var(--card-bg);
      border-top: 1px solid var(--border-color);
      display: flex;
      gap: 0.75rem;
    }

    #user-input {
      flex-grow: 1;
      padding: 0.75rem 1rem;
      border: 2px solid var(--border-color);
      border-radius: 0.75rem;
      font-size: 1rem;
      color: var(--text-primary);
      transition: all 0.2s;
    }

    #user-input:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    }

    button {
      padding: 0.75rem 1.5rem;
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 0.75rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s;
    }

    button:hover {
      background-color: var(--primary-hover);
    }

    .lab-section {
      background-color: var(--bg-chat);
      border-radius: 0.75rem;
      padding: 1rem;
      margin-bottom: 1rem;
      transition: all 0.3s ease;
      position: relative;
      z-index: 1;
    }

    .lab-title {
      color: var(--primary-color);
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 0;
      padding: 1rem;
      border-radius: 0.5rem;
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      background-color: transparent;
      position: relative;
      z-index: 1;
    }

    .lab-title:hover {
      background-color: rgba(99, 102, 241, 0.1);
      transform: translateX(4px);
    }

    .lab-title::after {
      content: '▼';
      font-size: 0.8rem;
      transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      opacity: 0.7;
    }

    .lab-title.active {
      position: relative;
      z-index: 2;
    }

    .lab-title.active::after {
      transform: rotate(180deg);
      opacity: 1;
    }

    .prompt-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 0.8rem;
      padding: 0.5rem;
      max-height: 0;
      overflow: hidden;
      opacity: 0;
      transform: translateY(-10px);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      z-index: 3;
    }

    .prompt-grid.active {
      max-height: 2000px;
      opacity: 1;
      transform: translateY(0);
      padding-top: 4rem;
    }


    .prompt-btn {
      background-color: white;
      color: var(--text-primary);
      padding: 0.75rem 1rem;
      border: 1px solid var(--border-color);
      border-radius: 1rem;
      font-size: 0.875rem;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      text-align: center;
      width: 100%;
      transform: scale(1);
      position: relative; /* เพิ่มบรรทัดนี้ */
      z-index: 4;
      cursor: pointer;
    }

    /* เพิ่มส่วนของ tooltip */
    .prompt-btn::before {
      content: attr(data-prompt);
      position: absolute;
      bottom: 100%;
      left: 50%;
      transform: translateX(-50%);
      padding: 0.5rem;
      background-color: var(--text-primary);
      color: white;
      font-size: 0.75rem;
      border-radius: 0.5rem;
      white-space: normal;
      width: max-content;
      max-width: 300px;
      visibility: hidden;
      opacity: 0;
      transition: all 0.2s ease;
      z-index: 9999; /* เพิ่มค่า z-index ให้สูง */
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    /* Arrow for tooltip */
    .prompt-btn::after {
      content: '';
      position: absolute;
      bottom: 100%;
      left: 50%;
      transform: translateX(-50%);
      border: 6px solid transparent;
      border-top-color: var(--text-primary);
      visibility: hidden;
      opacity: 0;
      transition: all 0.2s ease;
      z-index: 9999;
    }

    /* Show tooltip on hover */
    .prompt-btn:hover::before,
    .prompt-btn:hover::after {
      visibility: visible;
      opacity: 1;
      bottom: calc(100% + 10px);
    }

    /* Adjust the button hover effect */
    .prompt-btn:hover {
      background-color: var(--bg-chat);
      border-color: var(--primary-color);
      transform: scale(1.02);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    /* Optional: Fade in animation for tooltip */
    @keyframes tooltipFade {
      from {
        opacity: 0;
        transform: translateX(-50%) translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
      }
    }

    @media (max-width: 768px) {
      body {
        flex-direction: column;
        padding: 0.5rem;
      }

      #chat-container, #prompts-panel {
        width: 100%;
        height: auto;
      }

      #chat-container {
        height: 60vh;
      }

      #prompts-panel {
        height: 40vh;
      }
    }
  </style>
</head>
<body>
      <!-- Narbar-->
      <%- include('../views/navbar') %>
        <!-- Chat Container -->
        <div id="chat-container">
          <div id="chat-history"></div>
          <div id="loader">
          </div>
          <form id="chat-form">
            <input type="text" id="user-input" placeholder="พิมพ์ข้อความของคุณ..." autocomplete="off">
            <button type="submit">ส่ง</button>
          </form>
        </div>
      
        <!-- Prompts Panel -->
        <div id="prompts-panel">
          <h2 style="margin-bottom: 20px; text-align: center;">Tutor Guide</h2>
          <div class="labs-container">
            <!-- Lab 1 -->
            <div class="lab-section">
              <div class="lab-title">Algorithms and Flowcharts</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายความสำคัญของการออกแบบอัลกอริทึมที่มีประสิทธิภาพและยกตัวอย่างการแก้ปัญหาด้วยอัลกอริทึม">1. ความสำคัญของอัลกอริทึม</button>
                <button class="prompt-btn" data-prompt="วาด flowchart ที่แสดงขั้นตอนการตรวจสอบว่าจำนวนที่ป้อนเข้ามาเป็นเลขคี่หรือเลขคู่พร้อมอธิบาย">2. Flowchart เลขคี่-คู่</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบระหว่าง pseudo code และ flowchart ว่ามีข้อดีข้อเสียต่างกันอย่างไร">3. Pseudo Code vs Flowchart</button>
                <button class="prompt-btn" data-prompt="แสดงวิธีการเปลี่ยนอัลกอริทึมจาก pseudo code เป็น flowchart">4. แปลง Pseudo Code เป็น Flowchart</button>
                <button class="prompt-btn" data-prompt="อธิบายแนวคิดการสร้างอัลกอริทึมสำหรับ linear search และ binary search">5. Search Algorithms</button>
                <button class="prompt-btn" data-prompt="ออกแบบอัลกอริทึมสำหรับ bubble sort พร้อม flowchart">6. Bubble Sort</button>
                <button class="prompt-btn" data-prompt="สร้าง flowchart การคำนวณค่า Factorial">7. Factorial Algorithm</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบ iterative กับ recursive ในการคำนวณ Fibonacci">8. Iterative vs Recursive</button>
                <button class="prompt-btn" data-prompt="สร้าง flowchart อธิบายอัลกอริทึมเกมสุ่มเลข">9. Number Guessing Game</button>
              </div>
            </div>
      
            <!-- Lab 2 -->
            <div class="lab-section">
              <div class="lab-title">Data Types and Variables</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายประเภทข้อมูลในภาษา C พร้อมยกตัวอย่าง">1. Data Types</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมแสดงการสร้างตัวแปรประเภทต่างๆ">2. Variables Declaration</button>
                <button class="prompt-btn" data-prompt="แสดงวิธีการแปลงประเภทข้อมูลและการใช้ type casting">3. Type Casting</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบการใช้ global และ local variables">4. Global vs Local Variables</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมคำนวณทางคณิตศาสตร์ด้วยตัวแปรต่างประเภท">5. Math Calculations</button>
                <button class="prompt-btn" data-prompt="ตัวอย่างการใช้ constant และ variable">6. Constants vs Variables</button>
                <button class="prompt-btn" data-prompt="ตัวอย่างการใช้ string manipulation">7. String Manipulation</button>
              </div>
            </div>
      
            <!-- Lab 3 -->
            <div class="lab-section">
              <div class="lab-title">Input and Output</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายหลักการรับข้อมูลและแสดงผลลัพธ์ในภาษา C">1. I/O Basics</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมรับข้อมูลและแสดงผลลัพธ์">2. Basic I/O Program</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบการรับข้อมูลแบบหลายค่าและทีละค่า">3. Multiple vs Single Input</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมแสดงผลแบบ formatted และ raw output">4. Output Formatting</button>
                <button class="prompt-btn" data-prompt="วาด flowchart การรับข้อมูลและแสดงผลตามเงื่อนไข">5. Conditional Output</button>
                <button class="prompt-btn" data-prompt="สำรวจฟังก์ชันจัดการ input และ output">6. I/O Functions</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมแปลงข้อความเป็นตัวพิมพ์ใหญ่">7. Text Transformation</button>
                <button class="prompt-btn" data-prompt="รับ input เป็น array และแสดงผลแบบเรียงลำดับ">8. Array I/O</button>
              </div>
            </div>
      
            <!-- Lab 4 -->
            <div class="lab-section">
              <div class="lab-title">Operators and Expressions</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายประเภทของ operators พร้อมตัวอย่าง">1. Types of Operators</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมใช้ตัวดำเนินการทางคณิตศาสตร์">2. Arithmetic Operators</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบ assignment operators และ compound assignment">3. Assignment Operators</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมใช้ตัวดำเนินการเปรียบเทียบ">4. Comparison Operators</button>
                <button class="prompt-btn" data-prompt="อธิบายการทำงานของ logical operators">5. Logical Operators</button>
                <button class="prompt-btn" data-prompt="อธิบายการใช้ bitwise operators">6. Bitwise Operators</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมใช้ relational operators">7. Relational Operators</button>
                <button class="prompt-btn" data-prompt="อธิบาย unary และ binary operators">8. Unary vs Binary</button>
                <button class="prompt-btn" data-prompt="แสดงตัวอย่างการใช้ ternary operator">9. Ternary Operator</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมใช้ multiple operators">10. Multiple Operators</button>
              </div>
            </div>
      
            <!-- Lab 5 -->
            <div class="lab-section">
              <div class="lab-title">Selection Statements</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายแนวคิดของ selection statements">1. Selection Basics</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมใช้ if-else statements">2. If-Else Program</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมใช้ switch case">3. Switch Case</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบ if-else กับ switch case">4. If-Else vs Switch</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมใช้ nested if statements">5. Nested If</button>
                <button class="prompt-btn" data-prompt="อธิบายการใช้ logical operators ใน selection">6. Logical Operators</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมตรวจสอบเลขคู่-คี่">7. Even-Odd Program</button>
              </div>
            </div>
      
            <!-- Lab 6 -->
            <div class="lab-section">
              <div class="lab-title">Loop Statements</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายประเภทของ loop statements">1. Loop Types</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมใช้ for loop">2. For Loop Sum</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมใช้ while loop">3. While Loop Input</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบ for loop กับ while loop">4. For vs While</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมใช้ nested loops">5. Nested Loops</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมหา Fibonacci">6. Fibonacci Loops</button>
                <button class="prompt-btn" data-prompt="อธิบาย loop control statements">7. Loop Control</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมหาจำนวนเฉพาะ">8. Prime Numbers</button>
                <button class="prompt-btn" data-prompt="สำรวจ infinite loops">9. Infinite Loops</button>
              </div>
            </div>
      
            <!-- Lab 7 -->
            <div class="lab-section">
              <div class="lab-title">Arrays and Strings</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายความแตกต่างระหว่าง array และ string">1. Arrays vs Strings</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมคำนวณผลรวม array">2. Array Sum</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรม string manipulation">3. String Operations</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบ static และ dynamic array">4. Static vs Dynamic</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมใช้ multidimensional array">5. Multi-Arrays</button>
                <button class="prompt-btn" data-prompt="สร้างโปรแกรมใช้ string functions">6. String Functions</button>
                <button class="prompt-btn" data-prompt="อธิบายการใช้ pointer กับ array">7. Array Pointers</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมค้นหาใน array">8. Array Search</button>
              </div>
            </div>
      
            <!-- Lab 8 -->
            <div class="lab-section">
              <div class="lab-title">Functions</div>
              <div class="prompt-grid">
                <button class="prompt-btn" data-prompt="อธิบายแนวคิดของฟังก์ชัน">1. Function Basics</button>
                <button class="prompt-btn" data-prompt="เขียนฟังก์ชันคำนวณผลรวม">2. Sum Function</button>
                <button class="prompt-btn" data-prompt="สร้างฟังก์ชันคำนวณค่าเฉลี่ย array">3. Array Average</button>
                <button class="prompt-btn" data-prompt="เปรียบเทียบ void และ return functions">4. Void vs Return</button>
                <button class="prompt-btn" data-prompt="เขียนฟังก์ชัน recursive หาค่า factorial">5. Recursive Function</button>
                <button class="prompt-btn" data-prompt="สร้างฟังก์ชันจัดการ string">6. String Functions</button>
                <button class="prompt-btn" data-prompt="อธิบายการใช้ default parameters">7. Default Parameters</button>
                <button class="prompt-btn" data-prompt="เขียนโปรแกรมแบบ modular">8. Modular Programming</button>
              </div>
            </div>
          </div>
        </div>

        <script>// เพิ่มฟังก์ชัน formatPrompt
// DOM Elements
const chatHistory = document.getElementById('chat-history');
const userInput = document.getElementById('user-input');
const form = document.getElementById('chat-form');
const loader = document.getElementById('loader');
const quickMessageButtons = document.querySelectorAll('.quick-message-btn');
const promptButtons = document.querySelectorAll('.prompt-btn');

let isPromptButton = false; // Flag to track if message is from prompt button

function addMessage(message, isUser = false) {
  const messageDiv = document.createElement('div');
  messageDiv.classList.add('message', isUser ? 'user-message' : 'bot-message');

  if (!isUser && message.includes('```')) {
    const codeMessage = message.replace(/```/g, '');
    messageDiv.innerHTML = `
      <pre><code>${codeMessage}</code><button class="copy-icon" onclick="copyCode(this)">Copy</button></pre>
    `;
  } else {
    messageDiv.textContent = message;
  }

  chatHistory.appendChild(messageDiv);
  chatHistory.scrollTop = chatHistory.scrollHeight;
}

async function sendMessage() {
  const originalMessage = userInput.value;
  userInput.value = '';
  addMessage(originalMessage, true);

  // Only format message if it's from a prompt button
  const messageToSend = isPromptButton 
    ? `${originalMessage}\n\nกรุณาอธิบายความหมายและตัวอย่างโค้ดภาษา C 3 ตัวอย่างที่แตกต่างกัน พร้อมอธิบายการทำงานของแต่ละตัวอย่าง`
    : originalMessage;

  const loadingDiv = document.createElement('div');
  loadingDiv.classList.add('message', 'bot-message');
  loadingDiv.textContent = 'Loading...';
  chatHistory.appendChild(loadingDiv);
  chatHistory.scrollTop = chatHistory.scrollHeight;

  try {
    const response = await fetch('/chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ userInput: messageToSend }),
    });

    const data = await response.json();
    chatHistory.removeChild(loadingDiv);
    addMessage(data.response, false);
  } catch (error) {
    console.error('Error:', error);
    chatHistory.removeChild(loadingDiv);
    addMessage('Error occurred. Please try again.', false);
  }
  
  // Reset the flag after sending
  isPromptButton = false;
}

// Event Listeners
promptButtons.forEach(button => {
  button.addEventListener('click', () => {
    const prompt = button.getAttribute('data-prompt');
    userInput.value = prompt;
    userInput.focus();
    isPromptButton = true; // Set flag when prompt button is clicked
    
    const length = userInput.value.length;
    userInput.setSelectionRange(length, length);
  });
});

form.addEventListener('submit', (event) => {
  event.preventDefault();
  if (userInput.value.trim() !== '') {
    sendMessage();
  }
});

function copyCode(button) {
  const codeElement = button.previousElementSibling;
  const codeText = codeElement.textContent;

  const tempTextArea = document.createElement('textarea');
  tempTextArea.value = codeText;
  document.body.appendChild(tempTextArea);

  tempTextArea.select();
  document.execCommand('copy');

  document.body.removeChild(tempTextArea);

  button.textContent = 'Copied!';
  setTimeout(() => {
    button.textContent = 'Copy';
  }, 2000);
}

// Lab sections expansion logic
document.addEventListener('DOMContentLoaded', () => {
  const labTitles = document.querySelectorAll('.lab-title');
  
  labTitles.forEach(title => {
    title.addEventListener('click', () => {
      const grid = title.nextElementSibling;
      const section = title.closest('.lab-section');
      const isActive = title.classList.contains('active');
      
      // Close all other sections
      document.querySelectorAll('.lab-title.active').forEach(activeTitle => {
        if (activeTitle !== title) {
          const activeGrid = activeTitle.nextElementSibling;
          const activeSection = activeTitle.closest('.lab-section');
          
          activeTitle.classList.remove('active');
          activeGrid.classList.remove('active');
          activeSection.style.backgroundColor = '';
          activeSection.style.boxShadow = '';
        }
      });
      
      // Toggle current section
      title.classList.toggle('active');
      
      if (!isActive) {
        requestAnimationFrame(() => {
          grid.classList.add('active');
          section.style.backgroundColor = 'rgba(99, 102, 241, 0.05)';
          section.style.boxShadow = '0 2px 8px rgba(99, 102, 241, 0.1)';
          
          title.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'nearest',
            inline: 'nearest'
          });
        });
      } else {
        grid.classList.remove('active');
        section.style.backgroundColor = '';
        section.style.boxShadow = '';
      }
    });
  });
});
        </script>
</body>
</html>