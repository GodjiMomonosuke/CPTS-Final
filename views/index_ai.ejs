<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Lab Chatbot</title>
  <style>
    :root {
      --bg-chat: #f0f0f0;
      --primary-color: #6366f1;
      --primary-hover: #4f46e5;
      --card-bg: #ffffff;
      --text-primary: #1f2937;
      --text-secondary: #6b7280;
      --border-color: #e5e7eb;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: system-ui, -apple-system, "Segoe UI", Roboto, sans-serif;
      background-color: var(--bg-chat);
      color: var(--text-primary);
      line-height: 1.5;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 1.5rem;
    }

    #chat-container {
      width: 100%;
      max-width: 900px;
      height: 85vh;
      background-color: var(--card-bg);
      border-radius: 1rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }

    #chat-header {
      padding: 1rem 1.5rem;
      background-color: var(--card-bg);
      border-bottom: 1px solid var(--border-color);
      display: flex;
      align-items: center;
    }

    #chat-header h1 {
      font-size: 1.25rem;
      font-weight: 600;
      color: var(--text-primary);
    }

    #chat-history {
      flex-grow: 1;
      padding: 1.5rem;
      overflow-y: auto;
      background-color: var(--bg-chat);
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .message {
      max-width: 85%;
      padding: 1rem;
      border-radius: 1rem;
      line-height: 1.6;
    }

    .user-message {
      margin-left: auto;
      background-color: var(--primary-color);
      color: white;
      border-bottom-right-radius: 0.25rem;
    }

    .bot-message {
      margin-right: auto;
      background-color: var(--card-bg);
      border-bottom-left-radius: 0.25rem;
    }

    #chat-form {
      padding: 1.25rem;
      background-color: var(--card-bg);
      border-top: 1px solid var(--border-color);
      display: flex;
      gap: 0.75rem;
    }

    #user-input {
      flex-grow: 1;
      padding: 0.75rem 1rem;
      border: 2px solid var(--border-color);
      border-radius: 0.75rem;
      font-size: 1rem;
      color: var(--text-primary);
      transition: all 0.2s;
    }

    #user-input:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    }

    button {
      padding: 0.75rem 1.5rem;
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 0.75rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s;
    }

    button:hover {
      background-color: var(--primary-hover);
    }

    #show-prompts-btn {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      width: 3.5rem;
      height: 3.5rem;
      border-radius: 50%;
      font-size: 1.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      z-index: 50;
    }

    #show-prompts-btn.hidden {
      display: none;
    }

    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(4px);
      z-index: 100;
    }

    .modal-content {
      background-color: var(--card-bg);
      margin: 5vh auto;
      padding: 2rem;
      width: 90%;
      max-width: 1000px;
      border-radius: 1rem;
      position: relative;
      max-height: 90vh;
      overflow-y: auto;
    }

    #loader {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1000;
    }

    .spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #f3f3f3;
      border-top: 4px solid var(--primary-color);
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á Lab Sections */
    .lab-section {
      background-color: var(--bg-chat);
      border-radius: 0.75rem;
      padding: 1rem;
      margin-bottom: 1rem;
    }

    .lab-title {
      color: var(--primary-color);
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 1rem;
      padding-bottom: 0.5rem;
      border-bottom: 2px solid var(--primary-color);
    }

    .prompt-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .prompt-btn {
      background-color: white;
      color: var(--text-primary);
      padding: 0.5rem 1rem;
      border: 1px solid var(--border-color);
      border-radius: 1rem;
      font-size: 0.875rem;
      transition: all 0.2s;
      flex: 1 1 auto;
      text-align: center;
      min-width: 120px;
    }

    .prompt-btn:hover {
      background-color: var(--bg-chat);
      border-color: var(--primary-color);
    }

    .close {
      position: absolute;
      right: 1.5rem;
      top: 1rem;
      font-size: 1.5rem;
      color: var(--text-secondary);
      cursor: pointer;
    }

    @media (max-width: 768px) {
      body {
        padding: 0.5rem;
      }

      #chat-container {
        height: 90vh;
      }

      .message {
        max-width: 90%;
      }
    }
  </style>
</head>
<body>
      <!-- Narbar-->
      <%- include('../views/navbar') %>

  <!-- Chat Container -->
  <div id="chat-container">
    <div id="chat-history"></div>
    <div id="loader">
      <div class="spinner">Loading...</div>
    </div>
    <form id="chat-form">
      <input type="text" id="user-input" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..." autocomplete="off">
      <button type="submit">‡∏™‡πà‡∏á</button>
    </form>
  </div>

  <!-- Floating Button -->
  <button id="show-prompts-btn">üìö</button>

  <!-- Labs Modal -->
  <div id="prompts-modal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2 style="margin-bottom: 20px; text-align: center;">Lab Prompts</h2>

      <div class="labs-container">
        <!-- Lab 1 -->
        <div class="lab-section">
          <div class="lab-title">Lab 1: Algorithms and Flowcharts</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°">1. ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°</button>
            <button class="prompt-btn" data-prompt="‡∏ß‡∏≤‡∏î flowchart ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢">2. Flowchart ‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà-‡∏Ñ‡∏π‡πà</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á pseudo code ‡πÅ‡∏•‡∏∞ flowchart ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£">3. Pseudo Code vs Flowchart</button>
            <button class="prompt-btn" data-prompt="‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏à‡∏≤‡∏Å pseudo code ‡πÄ‡∏õ‡πá‡∏ô flowchart">4. ‡πÅ‡∏õ‡∏•‡∏á Pseudo Code ‡πÄ‡∏õ‡πá‡∏ô Flowchart</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö linear search ‡πÅ‡∏•‡∏∞ binary search">5. Search Algorithms</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö bubble sort ‡∏û‡∏£‡πâ‡∏≠‡∏° flowchart">6. Bubble Sort</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á flowchart ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤ Factorial">7. Factorial Algorithm</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö iterative ‡∏Å‡∏±‡∏ö recursive ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Fibonacci">8. Iterative vs Recursive</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á flowchart ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡πÄ‡∏Å‡∏°‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç">9. Number Guessing Game</button>
          </div>
        </div>

        <!-- Lab 2 -->
        <div class="lab-section">
          <div class="lab-title">Lab 2: Data Types and Variables</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏†‡∏≤‡∏©‡∏≤ C ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á">1. Data Types</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ï‡πà‡∏≤‡∏á‡πÜ">2. Variables Declaration</button>
            <button class="prompt-btn" data-prompt="‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ type casting">3. Type Casting</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ global ‡πÅ‡∏•‡∏∞ local variables">4. Global vs Local Variables</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏≤‡∏á‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó">5. Math Calculations</button>
            <button class="prompt-btn" data-prompt="‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ constant ‡πÅ‡∏•‡∏∞ variable">6. Constants vs Variables</button>
            <button class="prompt-btn" data-prompt="‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ string manipulation">7. String Manipulation</button>
          </div>
        </div>

        <!-- Lab 3 -->
        <div class="lab-section">
          <div class="lab-title">Lab 3: Input and Output</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô‡∏†‡∏≤‡∏©‡∏≤ C">1. I/O Basics</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå">2. Basic I/O Program</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤">3. Multiple vs Single Input</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö formatted ‡πÅ‡∏•‡∏∞ raw output">4. Output Formatting</button>
            <button class="prompt-btn" data-prompt="‡∏ß‡∏≤‡∏î flowchart ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç">5. Conditional Output</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ input ‡πÅ‡∏•‡∏∞ output">6. I/O Functions</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà">7. Text Transformation</button>
            <button class="prompt-btn" data-prompt="‡∏£‡∏±‡∏ö input ‡πÄ‡∏õ‡πá‡∏ô array ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö">8. Array I/O</button>
          </div>
        </div>

        <!-- Lab 4 -->
        <div class="lab-section">
          <div class="lab-title">Lab 4: Operators and Expressions</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á operators ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á">1. Types of Operators</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå">2. Arithmetic Operators</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö assignment operators ‡πÅ‡∏•‡∏∞ compound assignment">3. Assignment Operators</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö">4. Comparison Operators</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á logical operators">5. Logical Operators</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ bitwise operators">6. Bitwise Operators</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ relational operators">7. Relational Operators</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ unary ‡πÅ‡∏•‡∏∞ binary operators">8. Unary vs Binary</button>
            <button class="prompt-btn" data-prompt="‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ ternary operator">9. Ternary Operator</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ multiple operators">10. Multiple Operators</button>
          </div>
        </div>

        <!-- Lab 5 -->
        <div class="lab-section">
          <div class="lab-title">Lab 5: Selection Statements</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏Ç‡∏≠‡∏á selection statements">1. Selection Basics</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ if-else statements">2. If-Else Program</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ switch case">3. Switch Case</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö if-else ‡∏Å‡∏±‡∏ö switch case">4. If-Else vs Switch</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ nested if statements">5. Nested If</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ logical operators ‡πÉ‡∏ô selection">6. Logical Operators</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà-‡∏Ñ‡∏µ‡πà">7. Even-Odd Program</button>
          </div>
        </div>

        <!-- Lab 6 -->
        <div class="lab-section">
          <div class="lab-title">Lab 6: Loop Statements</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á loop statements">1. Loop Types</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ for loop">2. For Loop Sum</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ while loop">3. While Loop Input</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö for loop ‡∏Å‡∏±‡∏ö while loop">4. For vs While</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ nested loops">5. Nested Loops</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏≤ Fibonacci">6. Fibonacci Loops</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ loop control statements">7. Loop Control</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞">8. Prime Numbers</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏≥‡∏£‡∏ß‡∏à infinite loops">9. Infinite Loops</button>
          </div>
        </div>

        <!-- Lab 7 -->
        <div class="lab-section">
          <div class="lab-title">Lab 7: Arrays and Strings</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á array ‡πÅ‡∏•‡∏∞ string">1. Arrays vs Strings</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏° array">2. Array Sum</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° string manipulation">3. String Operations</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö static ‡πÅ‡∏•‡∏∞ dynamic array">4. Static vs Dynamic</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ multidimensional array">5. Multi-Arrays</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ä‡πâ string functions">6. String Functions</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ pointer ‡∏Å‡∏±‡∏ö array">7. Array Pointers</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô array">8. Array Search</button>
          </div>
        </div>

        <!-- Lab 8 -->
        <div class="lab-section">
          <div class="lab-title">Lab 8: Functions</div>
          <div class="prompt-grid">
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô">1. Function Basics</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°">2. Sum Function</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ array">3. Array Average</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö void ‡πÅ‡∏•‡∏∞ return functions">4. Void vs Return</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô recursive ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤ factorial">5. Recursive Function</button>
            <button class="prompt-btn" data-prompt="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ string">6. String Functions</button>
            <button class="prompt-btn" data-prompt="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ default parameters">7. Default Parameters</button>
            <button class="prompt-btn" data-prompt="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏ö‡∏ö modular">8. Modular Programming</button>
          </div>
        </div>

      </div>
    </div>
  </div>

  <script>
    // ‡πÄ‡∏Å‡πá‡∏ö JavaScript ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const chatHistory = document.getElementById('chat-history');
    const userInput = document.getElementById('user-input');
    const form = document.getElementById('chat-form');
    const loader = document.getElementById('loader');
    const quickMessageButtons = document.querySelectorAll('.quick-message-btn');

    function addMessage(message, isUser = false) {
      const messageDiv = document.createElement('div');
      messageDiv.classList.add('message', isUser ? 'user-message' : 'bot-message');

      if (!isUser && message.includes('```')) {
        const codeMessage = message.replace(/```/g, '');
        messageDiv.innerHTML = `
          <pre><code>${codeMessage}</code><button class="copy-icon" onclick="copyCode(this)">Copy</button></pre>
        `;
      } else {
        messageDiv.textContent = message;
      }

      chatHistory.appendChild(messageDiv);
      chatHistory.scrollTop = chatHistory.scrollHeight;
    }

    async function sendMessage() {
      const userMessage = userInput.value;
      userInput.value = '';
      addMessage(userMessage, true);

      try {
        loader.style.display = 'block';

        const response = await fetch('/chat', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ userInput: userMessage }),
        });

        const data = await response.json();
        const botMessage = data.response;
        addMessage(botMessage, false);
      } catch (error) {
        console.error('Error:', error);
        addMessage('Error occurred. Please try again.', false);
      } finally {
        loader.style.display = 'none';
      }
    }

    form.addEventListener('submit', (event) => {
      event.preventDefault();
      if (userInput.value.trim() !== '') {
        sendMessage();
      }
    });

    function copyCode(button) {
      const codeElement = button.previousElementSibling;
      const codeText = codeElement.textContent;

      const tempTextArea = document.createElement('textarea');
      tempTextArea.value = codeText;
      document.body.appendChild(tempTextArea);

      tempTextArea.select();
      document.execCommand('copy');

      document.body.removeChild(tempTextArea);

      button.textContent = 'Copied!';
      setTimeout(() => {
        button.textContent = 'Copy';
      }, 2000);
    }

    function handleQuickMessage(event) {
      const message = event.target.textContent;
      userInput.value = message;
      sendMessage();
    }

    quickMessageButtons.forEach(button => {
      button.addEventListener('click', handleQuickMessage);
    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° JavaScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö modal
    const modal = document.getElementById('prompts-modal');
    const showPromptsBtn = document.getElementById('show-prompts-btn');
    const closeBtn = document.getElementsByClassName('close')[0];
    const promptButtons = document.querySelectorAll('.prompt-btn');

    showPromptsBtn.onclick = function() {
      modal.style.display = 'block';
    }

    closeBtn.onclick = function() {
      modal.style.display = 'none';
    }

    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = 'none';
      }
    }

    promptButtons.forEach(button => {
      button.addEventListener('click', () => {
        const prompt = button.getAttribute('data-prompt');
        userInput.value = prompt;
        modal.style.display = 'none';
        sendMessage();
      });
    });
  </script>
</body>
</html>